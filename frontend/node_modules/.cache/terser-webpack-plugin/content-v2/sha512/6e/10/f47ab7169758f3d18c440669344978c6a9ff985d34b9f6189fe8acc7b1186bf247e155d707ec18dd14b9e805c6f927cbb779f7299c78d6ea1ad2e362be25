{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Justinas\\\\Desktop\\\\frontend\\\\src\\\\components\\\\Modal.js\",\"C:\\\\Users\\\\Justinas\\\\Desktop\\\\frontend\\\\src\\\\App.js\",\"C:\\\\Users\\\\Justinas\\\\Desktop\\\\frontend\\\\src\\\\components\\\\NameInput.js\",\"C:\\\\Users\\\\Justinas\\\\Desktop\\\\frontend\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\Justinas\\\\Desktop\\\\frontend\\\\src\\\\components\\\\Header.js\",\"C:\\\\Users\\\\Justinas\\\\Desktop\\\\frontend\\\\src\\\\components\\\\ServiceListItem.js\",\"C:\\\\Users\\\\Justinas\\\\Desktop\\\\frontend\\\\src\\\\components\\\\ServiceList.js\",\"C:\\\\Users\\\\Justinas\\\\Desktop\\\\frontend\\\\src\\\\components\\\\ServiceDashboardPage.js\",\"C:\\\\Users\\\\Justinas\\\\Desktop\\\\frontend\\\\src\\\\routers\\\\AppRouter.js\",\"C:\\\\Users\\\\Justinas\\\\Desktop\\\\frontend\\\\src\\\\index.js\"],\"names\":[\"FormDialog\",\"react_default\",\"a\",\"createElement\",\"Dialog_default\",\"open\",\"this\",\"props\",\"toggle\",\"aria-labelledby\",\"DialogTitle_default\",\"id\",\"DialogContent_default\",\"DialogContentText_default\",\"TextField_default\",\"autoFocus\",\"margin\",\"label\",\"type\",\"defaultValue\",\"activeItem\",\"title\",\"onChange\",\"handling\",\"fullWidth\",\"description\",\"Checkbox_default\",\"checked\",\"available\",\"DialogActions_default\",\"Button_default\",\"onClick\",\"color\",\"onSave\",\"React\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"TabContainer\",\"children\",\"dir\",\"index_es\",\"component\",\"style\",\"padding\",\"NavTabs\",\"state\",\"value\",\"handleChange\",\"event\",\"_this\",\"setState\",\"handleChangeIndex\",\"index\",\"_this$props\",\"classes\",\"theme\",\"className\",\"root\",\"AppBar_default\",\"position\",\"Tabs\",\"indicatorColor\",\"textColor\",\"Tab\",\"lib_default\",\"axis\",\"direction\",\"onChangeIndex\",\"withStyles\",\"backgroundColor\",\"palette\",\"background\",\"paper\",\"width\",\"withTheme\",\"ServiceListItem\",\"_ref\",\"availability\",\"react_router_dom\",\"to\",\"concat\",\"ServiceList\",\"services\",\"map\",\"service\",\"components_ServiceListItem\",\"Object\",\"assign\",\"key\",\"ServiceDashboardPage\",\"components_ServiceList\",\"createMuiTheme\",\"primary\",\"main\",\"secondary\",\"typography\",\"useNextVariants\",\"jsx\",\"core_styles\",\"Header\",\"react_router\",\"path\",\"exact\",\"ReactDOM\",\"render\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"\\r\\nimport React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Checkbox from '@material-ui/core/Checkbox';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport DialogActions from '@material-ui/core/DialogActions';\\r\\nimport DialogContent from '@material-ui/core/DialogContent';\\r\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\r\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\r\\n\\r\\nexport default class FormDialog extends React.Component {\\r\\n    render() {\\r\\n      return (\\r\\n        <div>\\r\\n          <Dialog\\r\\n            open={this.props.toggle}\\r\\n            aria-labelledby=\\\"form-dialog-title\\\"\\r\\n          >\\r\\n            <DialogTitle id=\\\"form-dialog-title\\\">Service Item</DialogTitle>\\r\\n            <DialogContent>\\r\\n              <DialogContentText>\\r\\n                Change services info\\r\\n              </DialogContentText>\\r\\n              <TextField\\r\\n                autoFocus\\r\\n                margin=\\\"dense\\\"\\r\\n                id=\\\"title\\\"\\r\\n                label=\\\"Title\\\"\\r\\n                type=\\\"text\\\"\\r\\n                defaultValue={this.props.activeItem.title}\\r\\n                onChange={this.props.handling}\\r\\n                fullWidth\\r\\n              />\\r\\n              <TextField\\r\\n                margin=\\\"dense\\\"\\r\\n                id=\\\"description\\\"\\r\\n                label=\\\"Description\\\"\\r\\n                type=\\\"text\\\"\\r\\n                defaultValue={this.props.activeItem.description}\\r\\n                onChange={this.props.handling}\\r\\n                fullWidth\\r\\n              />\\r\\n              <Checkbox\\r\\n                label=\\\"Availability\\\"\\r\\n                checked={this.props.activeItem.available}\\r\\n                onChange={this.props.handling}\\r\\n              />\\r\\n            </DialogContent>\\r\\n            <DialogActions>\\r\\n              <Button onClick={this.props.toggle} color=\\\"primary\\\">\\r\\n                Cancel\\r\\n              </Button>\\r\\n              <Button onClick={this.props.onSave} color=\\\"primary\\\">\\r\\n                Save\\r\\n              </Button>\\r\\n            </DialogActions>\\r\\n          </Dialog>\\r\\n        </div>\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n\\r\\n\",\"import React from 'react';\\nimport './App.css';\\nimport Modal from './components/Modal';\\nimport axios from 'axios';\\n\\nexport default class App extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      modal: false,\\n      viewAvailable: true,\\n      activeItem: {\\n        title: \\\" \\\",\\n        description: \\\" \\\",\\n        availability: true,\\n        place: \\\"\\\",\\n        priceForm: 0,\\n        priceTo: 0\\n      },\\n      servicesList: []\\n    };\\n  }\\n\\n  handleChange = e => {\\n    let { name, value } = e.target;\\n    if (e.target.type === \\\"checkbox\\\") {\\n        value = e.target.checked;\\n    }\\n    const activeItem = { ...this.props.activeItem, [name]: value };\\n    this.setState({ activeItem });\\n  };\\n\\n  componentDidMount() {\\n    this.refreshList();\\n  }\\n\\n  refreshList = () => {\\n    axios\\n      .get('/api/service/')\\n      .then(res => {\\n        console.log(res.data);\\n        this.setState({ servicesList: res.data });\\n      })\\n      .catch(err => console.log(err));\\n  };\\n\\n  displayCompleted = status => {\\n    if (status) {\\n      return this.setState({ viewAvailable: true });\\n    }\\n    return this.setState({ viewAvailable: false });\\n  };\\n\\n  renderTabList = () => {\\n    return (\\n      <div className=\\\"my-5 tab-list\\\">\\n        <span\\n          onClick={() => this.displayCompleted(true)}\\n          className={this.state.viewAvailable ? \\\"active\\\" : \\\"\\\"}\\n        >\\n          Available\\n        </span>\\n        <span\\n          onClick={() => this.displayCompleted(false)}\\n          className={this.state.viewAvailable ? \\\"\\\" : \\\"active\\\"}\\n          >\\n            Unavailable\\n          </span>\\n      </div>\\n    );\\n  };\\n\\n  \\n\\n  renderItems = () => {\\n    const allItems = Array.from(this.state.servicesList);\\n    return allItems.map(item => (\\n      <li\\n        key={item.id}\\n        className=\\\"list-group-item d-flex justify-content-between align-items-center\\\"\\n      >\\n        <p>{item.title}</p>\\n          <button\\n            onClick={() => this.editItem(item)}\\n            className=\\\"btn btn-secondary mr-2\\\"\\n          >\\n            Edit \\n          </button>\\n          <button\\n            onClick={() => this.handleDelete(item)}\\n            className=\\\"btn btn-danger\\\"\\n          > \\n            Delete \\n          </button>\\n      </li>\\n    ));\\n  };\\n\\n  toggle = () => {\\n    this.setState({ modal: !this.state.modal });\\n  };\\n\\n  handleSubmit = item => {\\n    this.toggle();\\n    if (item.id) {\\n      axios\\n        .put(`/api/service/${item.id}/`, item)\\n        .then(res => this.refreshList(),\\n        this.setState({ modal: !this.state.modal }));\\n      return;\\n    }\\n    axios\\n      .post(\\\"/api/service/\\\", item)\\n      .then(res => this.refreshList());\\n    this.setState({ modal: !this.state.modal });\\n  };\\n\\n  handleDelete = item => {\\n    axios\\n      .delete(`/api/service/${item.id}`)\\n      .then(res => this.refreshList());\\n  };\\n\\n  createItem = () => {\\n    const item = { title: \\\" \\\", description: \\\" \\\", availability: true };\\n    this.setState({ activeItem: item, modal: !this.state.modal });\\n  };\\n\\n  editItem = item => {\\n    this.setState({ activeItem: item, modal: !this.state.modal });\\n  };\\n\\n\\n\\n  render() {\\n    return (\\n      <main className=\\\"content\\\">\\n        <h1 className=\\\"text-white text-uppercase text-center my-4\\\">Services App</h1>\\n        <div className=\\\"row\\\">\\n          <div className=\\\"col-md-6 col-sm-10 mx-auto p-0\\\">\\n            <div className=\\\"card p-3\\\">\\n              <button className=\\\"btn btn-primary\\\" onClick={this.createItem}> Add Service </button>\\n            </div>\\n            {this.renderTabList()}\\n            <ul className=\\\"list-group list-group-flush\\\">\\n              {this.renderItems()}\\n            </ul>\\n          </div>\\n        </div>\\n        <div>\\n        {this.state.modal ? (\\n          <Modal\\n            activeItem={this.state.activeItem}\\n            toggle={this.toggle}\\n            onSave={this.handleSubmit}\\n            handling={this.handleChange}\\n            />\\n        ) : null}\\n        </div>\\n      </main>\\n    );\\n  }\\n}\",\"import React from 'react';\\r\\nimport { TextField } from '@material-ui/core';\\r\\n\\r\\nexport default class LoginInput extends React.Component {\\r\\n\\r\\n    checkIfEmpty = itemString => {\\r\\n        if (itemString === \\\"\\\")\\r\\n            return false;\\r\\n        else return true;\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div>\\r\\n                <TextField\\r\\n                    id=\\\"username-input\\\"\\r\\n                    type={this.props.type}\\r\\n                    label={this.checkIfEmpty(this.props.firstField) ? this.props.firstField : \\\" \\\"}\\r\\n                    placeholder={this.checkIfEmpty(this.props.secondField) ? this.props.secondField : \\\" \\\"}\\r\\n                    fullWidth\\r\\n                    margin=\\\"normal\\\"\\r\\n                    variant=\\\"outlined\\\"\\r\\n                    InputLabelProps={{\\r\\n                        shrink: true\\r\\n                    }}\\r\\n                />\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\r\\nimport {NavLink} from 'react-router-dom';\\r\\nimport { withStyles } from '@material-ui/core/styles';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport AppBar from '@material-ui/core/AppBar';\\r\\nimport { NoSsr, Typography } from '@material-ui/core';\\r\\nimport { Tabs } from '@material-ui/core/Tabs';\\r\\nimport { Tab } from '@material-ui/core/Tab';\\r\\nimport SwipeableViews from 'react-swipeable-views';\\r\\n\\r\\nfunction TabContainer(children, dir) {\\r\\n    return (\\r\\n        <Typography component=\\\"div\\\" dir={dir} style={{ padding: 8 * 3 }}>\\r\\n            {children}\\r\\n        </Typography>\\r\\n    );\\r\\n}\\r\\n\\r\\nTabContainer.propTypes = {\\r\\n    children: PropTypes.node.isRequired,\\r\\n    dir: PropTypes.string.isRequired\\r\\n};\\r\\n\\r\\n\\r\\nfunction LinkTab(props) {\\r\\n    return <Tab component=\\\"a\\\" onClick={event => event.preventDefault()} {...props} />\\r\\n}\\r\\n\\r\\nconst styles = theme => ({\\r\\n    root: {\\r\\n        backgroundColor: theme.palette.background.paper,\\r\\n        width: '100%'\\r\\n    }\\r\\n});\\r\\n\\r\\nclass NavTabs extends React.Component {\\r\\n    state = {\\r\\n        value: 0\\r\\n    };\\r\\n\\r\\n    handleChange = (event, value) => {\\r\\n        this.setState({ value });\\r\\n    };\\r\\n\\r\\n    handleChangeIndex = index => {\\r\\n        this.setState({ value: index });\\r\\n    };\\r\\n\\r\\n    render() {\\r\\n        const { classes, theme } = this.props;\\r\\n        return(\\r\\n            <div className={classes.root}>\\r\\n                <AppBar position=\\\"static\\\" color=\\\"secondary\\\">\\r\\n                    <Tabs\\r\\n                    value={this.state.value}\\r\\n                    onChange={this.handleChange}\\r\\n                    indicatorColor=\\\"primary\\\"\\r\\n                    textColor=\\\"primary\\\"\\r\\n                    fullWidth\\r\\n                    >\\r\\n                        <Tab label=\\\"Home\\\" />\\r\\n                        <Tab label=\\\"Add Service\\\" />\\r\\n                        <Tab label=\\\"My Services\\\" />\\r\\n                    </Tabs>\\r\\n                    <SwipeableViews\\r\\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\\r\\n                        index={this.state.value}\\r\\n                        onChangeIndex={this.handleChangeIndex}\\r\\n                    >\\r\\n                        <TabContainer dir={theme.direction}>\\r\\n                            <div><p>Pirmas puslapis</p></div>\\r\\n                        </TabContainer>\\r\\n                        <TabContainer dir={theme.direction}>\\r\\n                            <div><p>Antras puslapis</p></div>\\r\\n                        </TabContainer>\\r\\n                        <TabContainer dir={theme.direction}>\\r\\n                            <div><p>Trecias puslapis</p></div>\\r\\n                        </TabContainer>\\r\\n                    </SwipeableViews>\\r\\n                </AppBar>\\r\\n                </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default withStyles(styles, {withTheme: true})(NavTabs);\\r\\n\\r\\n\\r\\n// export default () => (\\r\\n//     <header>\\r\\n//         <h1>Services App</h1>\\r\\n//         <NavLink to=\\\"/\\\" activeClassName=\\\"is-active\\\" exact={true}>Home</NavLink>\\r\\n//         <NavLink to=\\\"/create\\\" activeClassName=\\\"is-active\\\">Add Service</NavLink>\\r\\n//         <NavLink to=\\\"/help\\\" activeClassName=\\\"is-active\\\">Help</NavLink>\\r\\n//     </header>\\r\\n// );\",\"import React from 'react';\\r\\nimport { Link } from 'react-router-dom';\\r\\n\\r\\nconst ServiceListItem = ({ id, title, description, availability }) => (\\r\\n    <div>\\r\\n        <Link to={`/edit/${id}`}>\\r\\n            <h3>{title}</h3>\\r\\n        </Link>\\r\\n        <h4>{description}</h4>\\r\\n    </div>\\r\\n);\\r\\n\\r\\nexport default ServiceListItem;\",\"import React from 'react';\\r\\nimport ServiceListItem from './ServiceListItem';\\r\\n\\r\\nconst ServiceList = (props) => (\\r\\n    <div>\\r\\n        <h1>ServiceList</h1>\\r\\n        {props.services.map((service) => {\\r\\n            return <ServiceListItem key={service.id} {...service} />\\r\\n        })}\\r\\n    </div>\\r\\n);\\r\\n\\r\\nexport default ServiceList;\",\"import React from 'react';\\r\\nimport ServiceList from './ServiceList';\\r\\n\\r\\nconst services = [\\r\\n    {\\r\\n        id: 1,\\r\\n        title: 'Kirpimas',\\r\\n        description: 'Pigu ir greita'\\r\\n    },\\r\\n    {\\r\\n        id: 2,\\r\\n        title: 'naguciai',\\r\\n        description: 'geliniai'\\r\\n    },\\r\\n];\\r\\n\\r\\nexport default () => (\\r\\n    <div>\\r\\n        <ServiceList services={services}/>\\r\\n    </div>\\r\\n);\",\"import React from 'react';\\r\\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\\r\\nimport Header from '../components/Header';\\r\\nimport ServiceDashboardPage from '../components/ServiceDashboardPage';\\r\\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\\r\\n\\r\\nconst theme = createMuiTheme({\\r\\n    palette: {\\r\\n        primary: {\\r\\n            main: '#000000'\\r\\n        },\\r\\n        secondary: {\\r\\n            main: '#FFFFFF'\\r\\n        }\\r\\n    },\\r\\n    typography: {\\r\\n        useNextVariants: true\\r\\n    }\\r\\n});\\r\\n\\r\\nexport default () => (\\r\\n    <MuiThemeProvider theme={theme}>\\r\\n        <BrowserRouter>\\r\\n            <div>\\r\\n                <Header />\\r\\n                <Switch>\\r\\n                    <Route path=\\\"/\\\" component={ServiceDashboardPage} exact={true} />\\r\\n                    <Route path=\\\"/create\\\" />\\r\\n                    <Route path=\\\"/edit/:id\\\"  />\\r\\n                    <Route path=\\\"/help\\\"  />\\r\\n                    <Route  />\\r\\n                </Switch>\\r\\n            </div>\\r\\n        </BrowserRouter>\\r\\n    </MuiThemeProvider>\\r\\n);\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n//import './index.css';\\nimport App from './App';\\nimport HomePage from './HomePage';\\nimport * as serviceWorker from './serviceWorker';\\nimport './styles/styles.scss'\\nimport Approuter from './routers/AppRouter';\\n\\nconst jsx = (\\n    <div>\\n        <Approuter />\\n    </div>\\n);\\n\\nReactDOM.render(jsx, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{215:function(e,t,a){e.exports=a(404)},220:function(e,t,a){},367:function(e,t,a){},404:function(e,t,a){\"use strict\";a.r(t);var n=a(0),l=a.n(n),r=a(19),i=a.n(r),c=a(71),o=a(139),s=a(25),u=a(26),m=a(28),d=a(27),p=a(29),h=(a(220),a(40)),E=a.n(h),v=a(67),g=a.n(v),b=a(49),f=a.n(b),y=a(63),C=a.n(y),w=a(68),j=a.n(w),x=a(65),O=a.n(x),k=a(66),S=a.n(k),T=a(64),I=a.n(T),F=function(e){function t(){return Object(s.a)(this,t),Object(m.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",null,l.a.createElement(C.a,{open:this.props.toggle,\"aria-labelledby\":\"form-dialog-title\"},l.a.createElement(I.a,{id:\"form-dialog-title\"},\"Service Item\"),l.a.createElement(O.a,null,l.a.createElement(S.a,null,\"Change services info\"),l.a.createElement(f.a,{autoFocus:!0,margin:\"dense\",id:\"title\",label:\"Title\",type:\"text\",defaultValue:this.props.activeItem.title,onChange:this.props.handling,fullWidth:!0}),l.a.createElement(f.a,{margin:\"dense\",id:\"description\",label:\"Description\",type:\"text\",defaultValue:this.props.activeItem.description,onChange:this.props.handling,fullWidth:!0}),l.a.createElement(g.a,{label:\"Availability\",checked:this.props.activeItem.available,onChange:this.props.handling})),l.a.createElement(j.a,null,l.a.createElement(E.a,{onClick:this.props.toggle,color:\"primary\"},\"Cancel\"),l.a.createElement(E.a,{onClick:this.props.onSave,color:\"primary\"},\"Save\"))))}}]),t}(l.a.Component),W=a(51),A=a.n(W),M=(l.a.Component,a(72));l.a.Component,Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a(367);var P=a(50),V=a(32),B=a(16),J=a(69),N=a.n(J),D=a(70),H=a(31),K=a(141),L=a.n(K);function $(e,t){return l.a.createElement(M.b,{component:\"div\",dir:t,style:{padding:24}},e)}var q=function(e){function t(){var e,a;Object(s.a)(this,t);for(var n=arguments.length,l=new Array(n),r=0;r<n;r++)l[r]=arguments[r];return(a=Object(m.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(l)))).state={value:0},a.handleChange=function(e,t){a.setState({value:t})},a.handleChangeIndex=function(e){a.setState({value:e})},a}return Object(p.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){var e=this.props,t=e.classes,a=e.theme;return l.a.createElement(\"div\",{className:t.root},l.a.createElement(N.a,{position:\"static\",color:\"secondary\"},l.a.createElement(D.Tabs,{value:this.state.value,onChange:this.handleChange,indicatorColor:\"primary\",textColor:\"primary\",fullWidth:!0},l.a.createElement(H.Tab,{label:\"Home\"}),l.a.createElement(H.Tab,{label:\"Add Service\"}),l.a.createElement(H.Tab,{label:\"My Services\"})),l.a.createElement(L.a,{axis:\"rtl\"===a.direction?\"x-reverse\":\"x\",index:this.state.value,onChangeIndex:this.handleChangeIndex},l.a.createElement($,{dir:a.direction},l.a.createElement(\"div\",null,l.a.createElement(\"p\",null,\"Pirmas puslapis\"))),l.a.createElement($,{dir:a.direction},l.a.createElement(\"div\",null,l.a.createElement(\"p\",null,\"Antras puslapis\"))),l.a.createElement($,{dir:a.direction},l.a.createElement(\"div\",null,l.a.createElement(\"p\",null,\"Trecias puslapis\"))))))}}]),t}(l.a.Component),z=Object(B.withStyles)(function(e){return{root:{backgroundColor:e.palette.background.paper,width:\"100%\"}}},{withTheme:!0})(q),G=function(e){var t=e.id,a=e.title,n=e.description;e.availability;return l.a.createElement(\"div\",null,l.a.createElement(P.b,{to:\"/edit/\".concat(t)},l.a.createElement(\"h3\",null,a)),l.a.createElement(\"h4\",null,n))},Q=function(e){return l.a.createElement(\"div\",null,l.a.createElement(\"h1\",null,\"ServiceList\"),e.services.map(function(e){return l.a.createElement(G,Object.assign({key:e.id},e))}))},R=[{id:1,title:\"Kirpimas\",description:\"Pigu ir greita\"},{id:2,title:\"naguciai\",description:\"geliniai\"}],U=function(){return l.a.createElement(\"div\",null,l.a.createElement(Q,{services:R}))},X=Object(B.createMuiTheme)({palette:{primary:{main:\"#000000\"},secondary:{main:\"#FFFFFF\"}},typography:{useNextVariants:!0}}),Y=l.a.createElement(\"div\",null,l.a.createElement(function(){return l.a.createElement(B.MuiThemeProvider,{theme:X},l.a.createElement(P.a,null,l.a.createElement(\"div\",null,l.a.createElement(z,null),l.a.createElement(V.c,null,l.a.createElement(V.a,{path:\"/\",component:U,exact:!0}),l.a.createElement(V.a,{path:\"/create\"}),l.a.createElement(V.a,{path:\"/edit/:id\"}),l.a.createElement(V.a,{path:\"/help\"}),l.a.createElement(V.a,null)))))},null));i.a.render(Y,document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[215,1,2]]]);","extractedComments":[]}